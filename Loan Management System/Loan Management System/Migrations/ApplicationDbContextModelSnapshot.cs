// <auto-generated />
using System;
using Loan_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Loan_Management_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Loan_Management_System.DTOs.AppliedLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AppliedAmount")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal>("AppliedRate")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LoanId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TermLength")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("UserId");

                    b.ToTable("AppliedLoans");
                });

            modelBuilder.Entity("Loan_Management_System.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Loan_Management_System.DTOs.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LogoPictureId")
                        .HasColumnType("integer");

                    b.Property<decimal>("MaxInterestRate")
                        .HasColumnType("numeric(5,2)");

                    b.Property<decimal>("MaxLoanAmount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("MinCreditScore")
                        .HasColumnType("integer");

                    b.Property<decimal>("MinInterestRate")
                        .HasColumnType("numeric(5,2)");

                    b.Property<decimal>("MinLoanAmount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("ProcessingFee")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("TermLength")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.HasIndex("LogoPictureId")
                        .IsUnique();

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Loan_Management_System.DTOs.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasColumnType("character varying(40)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("gender_enum");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying(128)");

                    b.Property<int>("ProfilePictureFileId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("role_enum");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("ProfilePictureFileId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Loan_Management_System.DTOs.AppliedLoan", b =>
                {
                    b.HasOne("Loan_Management_System.DTOs.Loan", "Loan")
                        .WithMany("AppliedLoans")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loan_Management_System.DTOs.User", "User")
                        .WithMany("AppliedLoans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Loan_Management_System.DTOs.Loan", b =>
                {
                    b.HasOne("Loan_Management_System.Models.File", "LogoPicture")
                        .WithOne("Loan")
                        .HasForeignKey("Loan_Management_System.DTOs.Loan", "LogoPictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogoPicture");
                });

            modelBuilder.Entity("Loan_Management_System.DTOs.User", b =>
                {
                    b.HasOne("Loan_Management_System.Models.File", "ProfilePicture")
                        .WithOne("User")
                        .HasForeignKey("Loan_Management_System.DTOs.User", "ProfilePictureFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfilePicture");
                });

            modelBuilder.Entity("Loan_Management_System.Models.File", b =>
                {
                    b.Navigation("Loan")
                        .IsRequired();

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("Loan_Management_System.DTOs.Loan", b =>
                {
                    b.Navigation("AppliedLoans");
                });

            modelBuilder.Entity("Loan_Management_System.DTOs.User", b =>
                {
                    b.Navigation("AppliedLoans");
                });
#pragma warning restore 612, 618
        }
    }
}
